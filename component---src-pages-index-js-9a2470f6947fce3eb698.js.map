{"version":3,"sources":["webpack:///./src/shared/pages/home/Home.module.css","webpack:///./src/shared/hooks/carousel/getPrevAndNextIndex.js","webpack:///./src/shared/hooks/carousel/useCarouselBehavior.js","webpack:///./src/shared/hooks/carousel/CarouselProvider.js","webpack:///./src/shared/pages/home/Home.js"],"names":["module","exports","getPrevAndNextIndex","currentIndex","length","prev","next","DIRECTIONS","useCarouselBehavior","duration","infinite","initialIndex","Error","intervalId","useRef","state","setState","useState","prevIndex","nextIndex","activeIndex","changeItem","useCallback","direction","prevState","nextActiveIndex","oldIndex","handleIntervalTick","clearInterval","resetInterval","current","setInterval","nextItem","prevItem","useEffect","CarouselProvider","children","carousel","context","useMemo","CarouselContext","Provider","value","Home","data","contentful","projectCollection","items","projects","location","seeProjects","useTranslations","title","useStaticQuery","site","siteMetadata","allProjects","map","smallDescription","photosCollection","index","coverPhoto","photo","src","url","alt","description","key","fullHeight","withFooter","className","styles","main","headerVariant","heading","to","navigationMapper","splittedButton","controls","arrowClassName","arrow","budgetButton"],"mappings":"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","file":"component---src-pages-index-js-9a2470f6947fce3eb698.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home-module--main--3KEdi\",\"heading\":\"Home-module--heading--2we-H\",\"carousel\":\"Home-module--carousel--wkMmo\",\"splittedButton\":\"Home-module--splittedButton--L0V-D\",\"controls\":\"Home-module--controls--3yLIV\",\"budgetButton\":\"Home-module--budgetButton--GQgUE\",\"arrow\":\"Home-module--arrow--1nfZY\"};","export const getPrevAndNextIndex = (currentIndex, length) => {\n    if (length === 1) {\n        return {\n            prev: currentIndex,\n            next: currentIndex,\n        };\n    }\n\n    if (currentIndex === 0) {\n        return {\n            prev: length - 1,\n            next: currentIndex + 1,\n        };\n    }\n\n    if (currentIndex === length - 1) {\n        return {\n            prev: currentIndex - 1,\n            next: 0,\n        };\n    }\n\n    return {\n        prev: currentIndex - 1,\n        next: currentIndex + 1,\n    };\n};\n\nexport default getPrevAndNextIndex;\n","import { useEffect, useState, useCallback, useRef } from 'react';\n\nimport getPrevAndNextIndex from './getPrevAndNextIndex';\n\nconst DIRECTIONS = {\n    NEXT: 'next',\n    PREV: 'prev',\n};\n\nexport const useCarouselBehavior = ({\n    length,\n    duration = 2000,\n    infinite = true,\n    initialIndex = 0,\n} = {}) => {\n    if (!length) {\n        throw new Error('\\'length\\' must be passed to useCarouselBehavior hook');\n    }\n\n    const intervalId = useRef();\n    const { prev, next } = getPrevAndNextIndex(initialIndex, length);\n\n    const [state, setState] = useState({\n        prevIndex: prev,\n        nextIndex: next,\n        activeIndex: initialIndex,\n    });\n\n    const changeItem = useCallback((direction) => (prevState) => {\n        const nextActiveIndex = direction === DIRECTIONS.NEXT ?\n            prevState.nextIndex :\n            prevState.prevIndex;\n\n        const { next, prev } = getPrevAndNextIndex(nextActiveIndex, length);\n\n        return {\n            ...prevState,\n            prevIndex: prev,\n            nextIndex: next,\n            oldIndex: prevState.activeIndex,\n            activeIndex: nextActiveIndex,\n        };\n    }, [length]);\n\n    const handleIntervalTick = useCallback(() => {\n        setState((prevState) => {\n            if (prevState.activeIndex + 1 === length && !infinite) {\n                clearInterval(intervalId);\n\n                return prevState;\n            }\n\n            return changeItem(DIRECTIONS.NEXT)(prevState);\n        });\n    }, [changeItem, infinite, length]);\n\n    const resetInterval = useCallback(() => {\n        clearInterval(intervalId.current);\n\n        intervalId.current = setInterval(handleIntervalTick, duration);\n    }, [duration, handleIntervalTick]);\n\n    const nextItem = useCallback(() => {\n        setState(changeItem(DIRECTIONS.NEXT));\n\n        resetInterval();\n    }, [changeItem, resetInterval]);\n\n    const prevItem = useCallback(() => {\n        setState(changeItem(DIRECTIONS.PREV));\n\n        resetInterval();\n    }, [changeItem, resetInterval]);\n\n    useEffect(() => {\n        intervalId.current = setInterval(handleIntervalTick, duration);\n\n        return () => {\n            clearInterval(intervalId.current);\n        };\n    }, [duration, handleIntervalTick]);\n\n    return {\n        ...state,\n        nextItem,\n        prevItem,\n    };\n};\n\nexport default useCarouselBehavior;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CarouselContext from './CarouselContext';\nimport useCarouselBehavior from './useCarouselBehavior';\n\nexport const CarouselProvider = ({\n    length,\n    duration,\n    children,\n}) => {\n    const carousel = useCarouselBehavior({ duration, length });\n\n    const context = useMemo(() => ({\n        ...carousel,\n        duration,\n        length,\n    }), [carousel, duration, length]);\n\n    return (\n        <CarouselContext.Provider value={ context }>\n            { children }\n        </CarouselContext.Provider>\n    );\n};\n\nCarouselProvider.propTypes = {\n    duration: PropTypes.number,\n    length: PropTypes.number.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default CarouselProvider;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport {\n    Layout,\n    Carousel,\n    ProjectSlide,\n    BudgetButton,\n    SplittedButton,\n    HomePageControls,\n} from '../../components';\nimport CarouselProvider from '../../hooks/carousel/CarouselProvider';\nimport { useTranslations } from '../../hooks';\nimport { navigationMapper } from '../../data';\n\nimport styles from './Home.module.css';\n\nconst defaultMetadataQuery = graphql`\n    {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n`;\n\nconst CAROUSEL_DURATION = 10000;\n\nexport const Home = ({\n    data: {\n        contentful: {\n            projectCollection: {\n                items: projects,\n            },\n        },\n    },\n    location,\n}) => {\n    const { seeProjects } = useTranslations();\n\n    const { title } = useStaticQuery(defaultMetadataQuery).site.siteMetadata;\n\n    const allProjects = useMemo(() => projects.map(({\n        title,\n        smallDescription,\n        photosCollection,\n    }, index) => {\n        const [coverPhoto] = photosCollection.items;\n        const photo = {\n            src: coverPhoto.url,\n            alt: coverPhoto.description,\n        };\n\n        return (\n            <ProjectSlide\n                title={ title }\n                photo={ photo }\n                key={ `${index}-${title}` }\n                description={ smallDescription } />\n        );\n    },\n    ), [projects]);\n\n    return (\n        <CarouselProvider\n            length={ projects.length }\n            duration={ CAROUSEL_DURATION }>\n            <Layout\n                fullHeight\n                withFooter={ false }\n                location={ location }\n                className={ styles.main }\n                headerVariant=\"transparent\">\n                <h1 className={ styles.heading }>{ title }</h1>\n                <Carousel\n                    items={ allProjects }\n                    className={ styles.carousel } />\n                <SplittedButton\n                    to={ navigationMapper.projects }\n                    className={ styles.splittedButton }>\n                    { seeProjects }\n                </SplittedButton>\n                <HomePageControls\n                    items={ projects }\n                    className={ styles.controls } />\n                <BudgetButton\n                    arrowClassName={ styles.arrow }\n                    className={ styles.budgetButton } />\n            </Layout>\n        </CarouselProvider>\n    );\n};\n\nHome.propTypes = {\n    data: PropTypes.shape({\n        contentful: PropTypes.shape({\n            projectCollection: PropTypes.shape({\n                items: PropTypes.array.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n};\n\nexport default Home;\n"],"sourceRoot":""}